---
organisation: 'Moengage' #give your GITHUB organisation name
jenkins :
  JENKINS_BASE: ""
  username: ""
  token: ""
tokens:
  github: '' #give your local alice's GITHUB TOKEN
  github_alternate : '' #Alternate token to be used when we get rate limiting through prev token
  slack: '' #give your local alice's slack TOKEN, make sure this token has access in your slack channels
  jenkins: '' #give your jekin's alice's jenkins TOKEN
  jira: '' #give your local alice's JIRA TOKEN

jira_domain: "" # give your jira domain name

dev_ops_team: "@p1 @p2" #your devOps team slack names preceeded by @
qa_team: "@p1 @p2"  #your QA team memebr slack names
debug: true  #To test your setup with alice, set it false when you take live
debug_alice: #in debug mode all the alerts to go in specific channel/person to avoid spamming any
  debug_channel: "#tmp"  #your slack channel name preceded by #
  debug_folks: "@pooja" #your slack name so all alerts comes to you for debugging
user_map:   #key value map GITHUB_NAME: SLACK_NAME of each member in team, used to notify them
  p00ja: pooja  #replace with your mapping, add more how many needed
  abhi: abhinav
release_notes_link: '' # link where you get release notes mentioned
release_freeze_details_path: "./alice/master_freeze_details.txt"
code_freeze_details_path: "./alice/qa_freeze_details.txt"
release_items_file_path: "./alice/dev_items.txt"
release_items_file_mergedBy: "./alice/dev_items_mergedby.txt" #
timezone: "Asia/Calcutta"   # Change as needed, this will used to store files with right timestamp
backup_files_path: "./alice/release_items"
repo_list:  #type:list ::all repo names for which alice should monitor
- REPO_1
- REPO_2
#### Repo wise settings ####
# Can keep adding repo specific input as per requirement
repo:
  MoEngage:  #your repo name
    checks: #type:list ::add/remove these checks for REPO_1. if given none: will trigger all the checks
    - close_dangerous_pr #names are case sensitive
    - tech_review
    - product_review
    - github_comment_guidelines
    - notify_lead_on_given_action
    - notify_channel_on_merge
    - notify_on_sensitive_files_touched
    - notify_qa_sign_off
    - remind_direct_release_guideline_on_merge
    - trigger_task_on_pr
    sensitive_branches: #type:list ::the branches you want to prevent
    - dev #change/add/remove as per your need
    - qa
    - master
    sensitive_files: #type:list ::the files you want to protect
    - f1   #any change merged in these files, dev ops team would be notified
    - f2
    shield:
      -
      -
        -
    product_team: "@p1 @p2 @p3" # the slack names space separated (each name to start with @)
    product_plus_required_dir_pattern: 'dashboard' #give directory name/path for which product review is a must
    product_team_github_names: # the github names of all PM's whose plus+1 should be considered mandatory
    - p1
    - p2
    - p3
    cc_members: "@p1 @p2" #the slack memeber names space separated (each name to start with @)
    code_channel: "#repo1-code" #1 slack channel name in which merged pull request info shoudl be notified
    alert_channel: "#weekly-releases" #1 slack channel name in which alerts should be posted
    notify_direct: # settings for direct message on slack
      person_to_be_notified: "@p1" #1 person for any activity notify this person, generally the lead for this repo
      action_to_be_notified_on: 'opened' #1 github action Ex. ["opened", "repoened", "merged"]
      branch_list_to_be_notified: #type:list ::direct notification on these branches for action set above
      - dev
      - qa
      tech_leads_to_be_notified_on_release_freeze: #type:list ::
      - "@p1"
      - "@p2"
    main_branch: 'master' # release branch, generally its master
    test_branch: 'qa' # test branch on which qa is locked to do release testing
    super_git_members: #GITHUB NAMES who can have super powers to break the rules in any tough circumstance (no alert for the crime)
    - p1
    - p2
    valid_contributors: # List of valid contributor for this branch
    - ajishnair
    - shahp00ja
    - vandanamoriwal
    - geetima12
    - akgoel-mo
    - naveenkumarkokku
    - prashanthegde9
    - moeoperation
    - BhuvanThejaChennuru
    - kanikapuniya2
    - siri-murthy
    - gagana11
    - madhurjyaparashar
    - rkjas12
    - Madhukirankm
  REPO_2:
    checks: #type:list ::add/remove these checks for REPO_1. if given none: will trigger all the checks
    - tech_review
    sensitive_branches: #type:list ::the branches you want to prevent
    - dev #change/add/remove as per your need
    - qa
    - master
    sensitive_files: #type:list ::the files you want to protect
    - f1   #any change merged in these files, dev ops team would be notified
    - f2
    product_team: "@p1" # the slack names space separated (each name to start with @)
    product_plus_required_dir_pattern: 'dashboard' #directory name/path for which product review is a must
    cc_members: "@p1 @p2 @p3" #the slack memeber names space separated (each name to start with @)
    code_channel: "#repo2-code" #1 slack channel name in which merged pull request info shoudl be notified
    alert_channel: "#weekly-releases" #1 slack channel name in which alerts should be posted
    notify_direct: # settings for direct message on slack
      person_to_be_notified: "@p" #1 person for any activity notify this person, generally the lead for this repo
      action_to_be_notified_on: 'opened' #1 github action Ex. ["opened", "repoened", "merged"]
      branch_list_to_be_notified: #type:list ::direct notification on these branches for action set above
      - dev
      - qa
      tech_leads_to_be_notified_on_release_freeze: #type:list ::
      - "@p1"
      - "@p2"
    main_branch: 'master' # release branch, generally its master
    test_branch: '' # test branch on which code is locked to do release testing
    dev_branch: '' # dev branch from where code freeze will be taken to test_branch for testing
    super_git_members: #GITHUB NAMES who can have super powers to break the rules in any tough circumstance (no alert for the crime)
    - p1
    - p2

#### For Running Tests: Yet to be released
#ci:
#  enable: true
#  repositories:
#  - repo1
#  - repo2
#  context: ci-jenkins
#  file_types:
#  - ".py"
#  description: Unit Tests
#  action_type:
#  - opened
#  - open
#  - reopened
#  - synchronize
#  jenkins:
#    domain: http://org.jenkins.com/
#    username: alice
#    job_name: CI_Unit_Tests